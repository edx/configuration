#!/usr/bin/env bash

# {{ ansible_managed }}

{% set edxapp_venv_bin = edxapp_venv_dir + "/bin" %}
source {{ edxapp_app_dir }}/edxapp_env
{% set executable = edxapp_venv_bin + '/celery' %}
{% if COMMON_ENABLE_NEWRELIC_APP %}
{% set executable = edxapp_venv_bin + '/newrelic-admin run-program ' + executable %}

export NEW_RELIC_CONFIG_FILE="{{ edxapp_app_dir }}/newrelic.ini"
if command -v ec2metadata >/dev/null 2>&1; then
  INSTANCEID=$(ec2metadata --instance-id);
  HOSTNAME=$(hostname)
  export NEW_RELIC_PROCESS_HOST_DISPLAY_NAME="$HOSTNAME-$INSTANCEID"
fi
{% endif %}

{% if EDXAPP_DATADOG_ENABLE %}
{% set executable = edxapp_venv_bin + '/ddtrace-run ' + executable %}
export DD_TAGS="service:edx-edxapp-${SERVICE_VARIANT}-workers queue:${QUEUE_NAME} version:{{ app_version }}"
export DD_DJANGO_USE_LEGACY_RESOURCE_FORMAT=true
export DD_GIT_COMMIT_SHA="{{ app_version }}"
export DD_GIT_REPOSITORY_URL="{{ EDXAPP_REPOSITORY_GIT_URL }}"
export DD_LOGS_INJECTION=true
# Copied from edx_django_service playbook for consistency; Datadog
# trace debug logging issue doesn't actually affect edxapp for some
# reason.
export DD_TRACE_LOG_STREAM_HANDLER=false

# Temporary: We currently have a span (or several) for each Django middleware,
# and Datadog Support has implied that it will be easier to debug our tracing
# issues if we don't record those middleware. (They make up the bulk of traces,
# at least visually.)
# See https://github.com/edx/edx-arch-experiments/issues/692
export DD_DJANGO_INSTRUMENT_MIDDLEWARE=false
{% endif -%}


# We exec so that celery is the child of supervisor and can be managed properly

exec {{ executable }} $@
