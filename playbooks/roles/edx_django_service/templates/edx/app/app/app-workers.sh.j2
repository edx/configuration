#!/usr/bin/env bash

# {{ ansible_managed }}

{% set edx_django_service_venv_bin = edx_django_service_venv_dir + "/bin" %}

{% set executable = edx_django_service_venv_bin + '/celery' %}

source {{ edx_django_service_home }}/{{ edx_django_service_name }}_env

{% if edx_django_service_enable_experimental_docker_shim %}

OLD_CONTAINERS=$(docker ps -aq --filter name="^{{ edx_django_service_name }}-worker-${DOCKER_WORKER_QUEUE}-${DOCKER_WORKER_NUM}\$")

# Delete old container so we can reuse the contianer name
if [[ -n "${OLD_CONTAINERS}" ]]; then
  docker rm ${OLD_CONTAINERS} > /dev/null 2>&1
fi

# We exec so that celery is the child of supervisor and can be managed properly
exec docker run \
  --name {{ edx_django_service_name }}-worker-${DOCKER_WORKER_QUEUE}-${DOCKER_WORKER_NUM} \
  --mount type=bind,src={{ edx_django_service_app_config_file }},dst={{ edx_django_service_app_config_file }} \
{% if COMMON_ENABLE_NEWRELIC_APP %}
  --env NEW_RELIC_DISTRIBUTED_TRACING_ENABLED \
  --env NEW_RELIC_APP_NAME \
  --env NEW_RELIC_PROCESS_HOST_DISPLAY_NAME \
  --env NEW_RELIC_LICENSE_KEY="{{ NEWRELIC_LICENSE_KEY }}" \
{% endif -%}
{% for name,value in edx_django_service_environment.items() -%}
{%- if value %}
  --env {{ name }} \
{% endif %}
{%- endfor %}
  {{ edx_django_service_docker_image_name }}:latest \
  celery \
  $@
{% else %}
# We exec so that celery is the child of supervisor and can be managed properly
exec {{ executable }} $@
{% endif %}
