#!/usr/bin/env bash

# {{ ansible_managed }}

# Set path to virtual environment bin directory
{% set edx_django_service_venv_bin = edx_django_service_venv_dir + "/bin" %}

# Set the default executable to Celery
{% set executable = edx_django_service_venv_bin + '/celery' %}

# Load the service environment
source {{ edx_django_service_home }}/{{ edx_django_service_name }}_env

{% if edx_django_service_enable_experimental_docker_shim %}

# Find old containers and remove them to reuse the container name
OLD_CONTAINERS=$(docker ps -aq --filter name="^{{ edx_django_service_name }}-worker-${DOCKER_WORKER_QUEUE}-${DOCKER_WORKER_NUM}\$")
if [[ -n "${OLD_CONTAINERS}" ]]; then
  docker rm ${OLD_CONTAINERS} > /dev/null 2>&1
fi

# Run Celery inside Docker
exec docker run \
  --name {{ edx_django_service_name }}-worker-${DOCKER_WORKER_QUEUE}-${DOCKER_WORKER_NUM} \
  --mount type=bind,src={{ edx_django_service_app_config_file }},dst={{ edx_django_service_app_config_file }} \
{% for name, value in edx_django_service_environment.items() %}
{% if value %}
  --env {{ name }} \
{% endif %}
{% endfor %}
  {{ edx_django_service_docker_image_name }}:latest celery $@

{% else %}

# Run Celery directly from virtual environment
exec {{ executable }} $@

{% endif %}
